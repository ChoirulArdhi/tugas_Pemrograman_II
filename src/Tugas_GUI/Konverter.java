package Tugas_GUI;


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;




public class Konverter extends javax.swing.JFrame {

    // Class untuk logika konversi
class UnitConverter {
    public static double convert(double value, String conversionType) {
        switch (conversionType) {
            case "Celsius ke Fahrenheit":
                return (value * 9 / 5) + 32;
            case "Fahrenheit ke Celsius":
                return (value - 32) * 5 / 9;
            case "Meter ke Kilometer":
                return value / 1000;
            case "Kilometer ke Meter":
                return value * 1000;
            case "Kilogram ke Gram":
                return value * 1000;
            case "Gram ke Kilogram":
                return value / 1000;
            default:
                throw new IllegalArgumentException("Jenis konversi tidak valid");
        }
    }
}
    public Konverter() {
        initComponents();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        // Membuat JFrame
        JFrame frame = new JFrame("Konverter Satuan Praktis");
        frame.setSize(400, 300);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Atur posisi jendela di tengah layar
        frame.setLocationRelativeTo(null);

        // Membuat Panel Utama dengan Background Warna
        JPanel panel = new JPanel();
        panel.setLayout(new GridBagLayout()); // Gunakan GridBagLayout untuk fleksibilitas
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Tambahkan padding
        panel.setBackground(new Color(240, 240, 240)); // Warna latar belakang panel
        frame.add(panel);

        // GridBagConstraints untuk mengatur posisi komponen
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 10, 10); // Menambahkan margin antar komponen

        // Komponen Input
        JLabel inputLabel = new JLabel("Masukkan Nilai:");
        inputLabel.setFont(new Font("Arial", Font.BOLD, 12)); // Font untuk label
        inputLabel.setForeground(new Color(50, 50, 50)); // Warna font label
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(inputLabel, gbc);

        JTextField inputField = new JTextField();
        inputField.setBackground(new Color(255, 255, 255)); // Warna latar belakang input
        inputField.setForeground(new Color(0, 0, 0)); // Warna teks input
        inputField.setFont(new Font("Arial", Font.PLAIN, 14)); // Font input
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        panel.add(inputField, gbc);

        // Pilihan Jenis Konversi
        JLabel conversionLabel = new JLabel("Pilih Jenis Konversi:");
        conversionLabel.setFont(new Font("Arial", Font.BOLD, 12)); // Font untuk label
        conversionLabel.setForeground(new Color(50, 50, 50)); // Warna font label
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 1;
        panel.add(conversionLabel, gbc);

        String[] options = {"Celsius ke Fahrenheit", "Fahrenheit ke Celsius", 
                            "Meter ke Kilometer", "Kilometer ke Meter", 
                            "Kilogram ke Gram", "Gram ke Kilogram"};
        JComboBox<String> conversionBox = new JComboBox<>(options);
        conversionBox.setBackground(new Color(255, 255, 255)); // Latar belakang combobox
        conversionBox.setFont(new Font("Arial", Font.PLAIN, 14)); // Font combobox
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        panel.add(conversionBox, gbc);

        // Tombol Konversi
        JButton convertButton = new JButton("Konversi");
        convertButton.setBackground(new Color(50, 150, 255)); // Warna latar belakang tombol
        convertButton.setForeground(new Color(255, 255, 255)); // Warna teks tombol
        convertButton.setFont(new Font("Arial", Font.BOLD, 14)); // Font tombol
        convertButton.setFocusPainted(false); // Menghilangkan efek focus
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 1;
        panel.add(convertButton, gbc);

        // Tombol Reset
        JButton resetButton = new JButton("Reset");
        resetButton.setBackground(new Color(255, 70, 70)); // Warna latar belakang tombol reset
        resetButton.setForeground(new Color(255, 255, 255)); // Warna teks tombol reset
        resetButton.setFont(new Font("Arial", Font.BOLD, 14)); // Font tombol reset
        resetButton.setFocusPainted(false); // Menghilangkan efek focus
        gbc.gridx = 1;
        gbc.gridy = 2;
        panel.add(resetButton, gbc);

        // Hasil
        JLabel resultLabel = new JLabel("Hasil:");
        resultLabel.setFont(new Font("Arial", Font.BOLD, 12)); // Font untuk label
        resultLabel.setForeground(new Color(50, 50, 50)); // Warna font label
        gbc.gridx = 0;
        gbc.gridy = 3;
        panel.add(resultLabel, gbc);

        JTextField resultField = new JTextField();
        resultField.setEditable(false);
        resultField.setBackground(new Color(255, 255, 255)); // Warna latar belakang hasil
        resultField.setForeground(new Color(0, 0, 0)); // Warna teks hasil
        resultField.setFont(new Font("Arial", Font.PLAIN, 14)); // Font hasil
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        panel.add(resultField, gbc);

        // Tambahkan ActionListener pada tombol
        convertButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    double input = Double.parseDouble(inputField.getText());
                    String conversionType = (String) conversionBox.getSelectedItem();
                    double result = UnitConverter.convert(input, conversionType);
                    resultField.setText(String.format("%.2f", result));
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Masukkan angka yang valid!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        resetButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                inputField.setText("");
                resultField.setText("");
                conversionBox.setSelectedIndex(0);
            }
        });

        // Tampilkan JFrame
        frame.setVisible(true);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

